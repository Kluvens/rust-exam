1.
reference of `y` is assigned to x.
And after this block, y goes out of scope and dropped.
Therefore, when trying to access it, it shows an error and cannot compile.

2.
In my opinion, this is a disadvantage.
Even though many languages like C, make this compilation valid, and it offers more flexibility.
However, it is not safe enough.
Rust introduced the concept of ownership and borrowing to ensure the type is always being monitored.
Rust ensured memory safety and makes program more stable and reliable.
Potential errors can be checked compile time as well.
